/*
 * Reelables API
 *
 * RESTful API for communicating with the Reelables Platform.
 *
 * The version of the OpenAPI document: 1.2.7
 * Contact: team@reelables.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using Reelables.Api.SDK.Client;
using Reelables.Api.SDK.Model;

namespace Reelables.Api.SDK.Api;

/// <summary>
/// Represents a collection of functions to interact with the API endpoints
/// </summary>
public interface IWorkspaceConsignmentsApiSync : IApiAccessor
{
    #region Synchronous Operations
    /// <summary>
    /// Update a Consignment using a Tracking Reference
    /// </summary>
    /// <exception cref="Reelables.Api.SDK.Client.ApiException">Thrown when fails to make API call</exception>
    /// <param name="workspaceId">The identifier of the Workspace</param>
    /// <param name="patchConsignmentInput"></param>
    /// <param name="requestId">Unique identifier for the API request. Example: f7ecf495-ca1c-4468-a6c2-6ee3f723fa00 (optional)</param>
    /// <param name="trackingRef">The tracking reference that identifies the Consignment in the user system (optional)</param>
    /// <param name="operationIndex">Index associated with the operation.</param>
    /// <returns>Consignment</returns>
    Consignment WorkspacesWorkspaceIdConsignmentsPatch(string workspaceId, PatchConsignmentInput patchConsignmentInput, string? requestId = default(string?), string? trackingRef = default(string?), int operationIndex = 0);

    /// <summary>
    /// Update a Consignment using a Tracking Reference
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <exception cref="Reelables.Api.SDK.Client.ApiException">Thrown when fails to make API call</exception>
    /// <param name="workspaceId">The identifier of the Workspace</param>
    /// <param name="patchConsignmentInput"></param>
    /// <param name="requestId">Unique identifier for the API request. Example: f7ecf495-ca1c-4468-a6c2-6ee3f723fa00 (optional)</param>
    /// <param name="trackingRef">The tracking reference that identifies the Consignment in the user system (optional)</param>
    /// <param name="operationIndex">Index associated with the operation.</param>
    /// <returns>ApiResponse of Consignment</returns>
    ApiResponse<Consignment> WorkspacesWorkspaceIdConsignmentsPatchWithHttpInfo(string workspaceId, PatchConsignmentInput patchConsignmentInput, string? requestId = default(string?), string? trackingRef = default(string?), int operationIndex = 0);
    /// <summary>
    /// Create new Consignment in Workspace
    /// </summary>
    /// <exception cref="Reelables.Api.SDK.Client.ApiException">Thrown when fails to make API call</exception>
    /// <param name="workspaceId">The identifier of the Workspace</param>
    /// <param name="workspaceConsignmentsInput"></param>
    /// <param name="requestId">Unique identifier for the API request. Example: f7ecf495-ca1c-4468-a6c2-6ee3f723fa00 (optional)</param>
    /// <param name="operationIndex">Index associated with the operation.</param>
    /// <returns>WorkspaceConsignments</returns>
    WorkspaceConsignments WorkspacesWorkspaceIdConsignmentsPost(string workspaceId, WorkspaceConsignmentsInput workspaceConsignmentsInput, string? requestId = default(string?), int operationIndex = 0);

    /// <summary>
    /// Create new Consignment in Workspace
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <exception cref="Reelables.Api.SDK.Client.ApiException">Thrown when fails to make API call</exception>
    /// <param name="workspaceId">The identifier of the Workspace</param>
    /// <param name="workspaceConsignmentsInput"></param>
    /// <param name="requestId">Unique identifier for the API request. Example: f7ecf495-ca1c-4468-a6c2-6ee3f723fa00 (optional)</param>
    /// <param name="operationIndex">Index associated with the operation.</param>
    /// <returns>ApiResponse of WorkspaceConsignments</returns>
    ApiResponse<WorkspaceConsignments> WorkspacesWorkspaceIdConsignmentsPostWithHttpInfo(string workspaceId, WorkspaceConsignmentsInput workspaceConsignmentsInput, string? requestId = default(string?), int operationIndex = 0);
    #endregion Synchronous Operations
}

/// <summary>
/// Represents a collection of functions to interact with the API endpoints
/// </summary>
public interface IWorkspaceConsignmentsApiAsync : IApiAccessor
{
    #region Asynchronous Operations
    /// <summary>
    /// Update a Consignment using a Tracking Reference
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <exception cref="Reelables.Api.SDK.Client.ApiException">Thrown when fails to make API call</exception>
    /// <param name="workspaceId">The identifier of the Workspace</param>
    /// <param name="patchConsignmentInput"></param>
    /// <param name="requestId">Unique identifier for the API request. Example: f7ecf495-ca1c-4468-a6c2-6ee3f723fa00 (optional)</param>
    /// <param name="trackingRef">The tracking reference that identifies the Consignment in the user system (optional)</param>
    /// <param name="operationIndex">Index associated with the operation.</param>
    /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
    /// <returns>Task of Consignment</returns>
    System.Threading.Tasks.Task<Consignment> WorkspacesWorkspaceIdConsignmentsPatchAsync(string workspaceId, PatchConsignmentInput patchConsignmentInput, string? requestId = default(string?), string? trackingRef = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

    /// <summary>
    /// Update a Consignment using a Tracking Reference
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <exception cref="Reelables.Api.SDK.Client.ApiException">Thrown when fails to make API call</exception>
    /// <param name="workspaceId">The identifier of the Workspace</param>
    /// <param name="patchConsignmentInput"></param>
    /// <param name="requestId">Unique identifier for the API request. Example: f7ecf495-ca1c-4468-a6c2-6ee3f723fa00 (optional)</param>
    /// <param name="trackingRef">The tracking reference that identifies the Consignment in the user system (optional)</param>
    /// <param name="operationIndex">Index associated with the operation.</param>
    /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
    /// <returns>Task of ApiResponse (Consignment)</returns>
    System.Threading.Tasks.Task<ApiResponse<Consignment>> WorkspacesWorkspaceIdConsignmentsPatchWithHttpInfoAsync(string workspaceId, PatchConsignmentInput patchConsignmentInput, string? requestId = default(string?), string? trackingRef = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    /// <summary>
    /// Create new Consignment in Workspace
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <exception cref="Reelables.Api.SDK.Client.ApiException">Thrown when fails to make API call</exception>
    /// <param name="workspaceId">The identifier of the Workspace</param>
    /// <param name="workspaceConsignmentsInput"></param>
    /// <param name="requestId">Unique identifier for the API request. Example: f7ecf495-ca1c-4468-a6c2-6ee3f723fa00 (optional)</param>
    /// <param name="operationIndex">Index associated with the operation.</param>
    /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
    /// <returns>Task of WorkspaceConsignments</returns>
    System.Threading.Tasks.Task<WorkspaceConsignments> WorkspacesWorkspaceIdConsignmentsPostAsync(string workspaceId, WorkspaceConsignmentsInput workspaceConsignmentsInput, string? requestId = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

    /// <summary>
    /// Create new Consignment in Workspace
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <exception cref="Reelables.Api.SDK.Client.ApiException">Thrown when fails to make API call</exception>
    /// <param name="workspaceId">The identifier of the Workspace</param>
    /// <param name="workspaceConsignmentsInput"></param>
    /// <param name="requestId">Unique identifier for the API request. Example: f7ecf495-ca1c-4468-a6c2-6ee3f723fa00 (optional)</param>
    /// <param name="operationIndex">Index associated with the operation.</param>
    /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
    /// <returns>Task of ApiResponse (WorkspaceConsignments)</returns>
    System.Threading.Tasks.Task<ApiResponse<WorkspaceConsignments>> WorkspacesWorkspaceIdConsignmentsPostWithHttpInfoAsync(string workspaceId, WorkspaceConsignmentsInput workspaceConsignmentsInput, string? requestId = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    #endregion Asynchronous Operations
}

/// <summary>
/// Represents a collection of functions to interact with the API endpoints
/// </summary>
public interface IWorkspaceConsignmentsApi : IWorkspaceConsignmentsApiSync, IWorkspaceConsignmentsApiAsync
{

}

/// <summary>
/// Represents a collection of functions to interact with the API endpoints
/// </summary>
public class WorkspaceConsignmentsApi : IWorkspaceConsignmentsApi
{
    private Reelables.Api.SDK.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

    /// <summary>
    /// Initializes a new instance of the <see cref="WorkspaceConsignmentsApi"/> class.
    /// </summary>
    /// <returns></returns>
    public WorkspaceConsignmentsApi() : this((string)null)
    {
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="WorkspaceConsignmentsApi"/> class.
    /// </summary>
    /// <returns></returns>
    public WorkspaceConsignmentsApi(string basePath)
    {
        this.Configuration = Reelables.Api.SDK.Client.Configuration.MergeConfigurations(
            Reelables.Api.SDK.Client.GlobalConfiguration.Instance,
            new Reelables.Api.SDK.Client.Configuration { BasePath = basePath }
        );
        this.Client = new Reelables.Api.SDK.Client.ApiClient(this.Configuration.BasePath);
        this.AsynchronousClient = new Reelables.Api.SDK.Client.ApiClient(this.Configuration.BasePath);
        this.ExceptionFactory = Reelables.Api.SDK.Client.Configuration.DefaultExceptionFactory;
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="WorkspaceConsignmentsApi"/> class
    /// using Configuration object
    /// </summary>
    /// <param name="configuration">An instance of Configuration</param>
    /// <returns></returns>
    public WorkspaceConsignmentsApi(Reelables.Api.SDK.Client.Configuration configuration)
    {
        if (configuration == null) throw new ArgumentNullException("configuration");

        this.Configuration = Reelables.Api.SDK.Client.Configuration.MergeConfigurations(
            Reelables.Api.SDK.Client.GlobalConfiguration.Instance,
            configuration
        );
        this.Client = new Reelables.Api.SDK.Client.ApiClient(this.Configuration.BasePath);
        this.AsynchronousClient = new Reelables.Api.SDK.Client.ApiClient(this.Configuration.BasePath);
        ExceptionFactory = Reelables.Api.SDK.Client.Configuration.DefaultExceptionFactory;
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="WorkspaceConsignmentsApi"/> class
    /// using a Configuration object and client instance.
    /// </summary>
    /// <param name="client">The client interface for synchronous API access.</param>
    /// <param name="asyncClient">The client interface for asynchronous API access.</param>
    /// <param name="configuration">The configuration object.</param>
    public WorkspaceConsignmentsApi(Reelables.Api.SDK.Client.ISynchronousClient client, Reelables.Api.SDK.Client.IAsynchronousClient asyncClient, Reelables.Api.SDK.Client.IReadableConfiguration configuration)
    {
        if (client == null) throw new ArgumentNullException("client");
        if (asyncClient == null) throw new ArgumentNullException("asyncClient");
        if (configuration == null) throw new ArgumentNullException("configuration");

        this.Client = client;
        this.AsynchronousClient = asyncClient;
        this.Configuration = configuration;
        this.ExceptionFactory = Reelables.Api.SDK.Client.Configuration.DefaultExceptionFactory;
    }

    /// <summary>
    /// The client for accessing this underlying API asynchronously.
    /// </summary>
    public Reelables.Api.SDK.Client.IAsynchronousClient AsynchronousClient { get; set; }

    /// <summary>
    /// The client for accessing this underlying API synchronously.
    /// </summary>
    public Reelables.Api.SDK.Client.ISynchronousClient Client { get; set; }

    /// <summary>
    /// Gets the base path of the API client.
    /// </summary>
    /// <value>The base path</value>
    public string GetBasePath()
    {
        return this.Configuration.BasePath;
    }

    /// <summary>
    /// Gets or sets the configuration object
    /// </summary>
    /// <value>An instance of the Configuration</value>
    public Reelables.Api.SDK.Client.IReadableConfiguration Configuration { get; set; }

    /// <summary>
    /// Provides a factory method hook for the creation of exceptions.
    /// </summary>
    public Reelables.Api.SDK.Client.ExceptionFactory ExceptionFactory
    {
        get
        {
            if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
            {
                throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
            }
            return _exceptionFactory;
        }
        set { _exceptionFactory = value; }
    }

    /// <summary>
    /// Update a Consignment using a Tracking Reference 
    /// </summary>
    /// <exception cref="Reelables.Api.SDK.Client.ApiException">Thrown when fails to make API call</exception>
    /// <param name="workspaceId">The identifier of the Workspace</param>
    /// <param name="patchConsignmentInput"></param>
    /// <param name="requestId">Unique identifier for the API request. Example: f7ecf495-ca1c-4468-a6c2-6ee3f723fa00 (optional)</param>
    /// <param name="trackingRef">The tracking reference that identifies the Consignment in the user system (optional)</param>
    /// <param name="operationIndex">Index associated with the operation.</param>
    /// <returns>Consignment</returns>
    public Consignment WorkspacesWorkspaceIdConsignmentsPatch(string workspaceId, PatchConsignmentInput patchConsignmentInput, string? requestId = default(string?), string? trackingRef = default(string?), int operationIndex = 0)
    {
        Reelables.Api.SDK.Client.ApiResponse<Consignment> localVarResponse = WorkspacesWorkspaceIdConsignmentsPatchWithHttpInfo(workspaceId, patchConsignmentInput, requestId, trackingRef);
        return localVarResponse.Data;
    }

    /// <summary>
    /// Update a Consignment using a Tracking Reference 
    /// </summary>
    /// <exception cref="Reelables.Api.SDK.Client.ApiException">Thrown when fails to make API call</exception>
    /// <param name="workspaceId">The identifier of the Workspace</param>
    /// <param name="patchConsignmentInput"></param>
    /// <param name="requestId">Unique identifier for the API request. Example: f7ecf495-ca1c-4468-a6c2-6ee3f723fa00 (optional)</param>
    /// <param name="trackingRef">The tracking reference that identifies the Consignment in the user system (optional)</param>
    /// <param name="operationIndex">Index associated with the operation.</param>
    /// <returns>ApiResponse of Consignment</returns>
    public Reelables.Api.SDK.Client.ApiResponse<Consignment> WorkspacesWorkspaceIdConsignmentsPatchWithHttpInfo(string workspaceId, PatchConsignmentInput patchConsignmentInput, string? requestId = default(string?), string? trackingRef = default(string?), int operationIndex = 0)
    {
        // verify the required parameter 'workspaceId' is set
        if (workspaceId == null)
        {
            throw new Reelables.Api.SDK.Client.ApiException(400, "Missing required parameter 'workspaceId' when calling WorkspaceConsignmentsApi->WorkspacesWorkspaceIdConsignmentsPatch");
        }

        // verify the required parameter 'patchConsignmentInput' is set
        if (patchConsignmentInput == null)
        {
            throw new Reelables.Api.SDK.Client.ApiException(400, "Missing required parameter 'patchConsignmentInput' when calling WorkspaceConsignmentsApi->WorkspacesWorkspaceIdConsignmentsPatch");
        }

        Reelables.Api.SDK.Client.RequestOptions localVarRequestOptions = new Reelables.Api.SDK.Client.RequestOptions();

        string[] _contentTypes = new string[] {
            "application/json"
        };

        // to determine the Accept header
        string[] _accepts = new string[] {
            "application/json"
        };

        var localVarContentType = Reelables.Api.SDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
        if (localVarContentType != null)
        {
            localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
        }

        var localVarAccept = Reelables.Api.SDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
        if (localVarAccept != null)
        {
            localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
        }

        localVarRequestOptions.PathParameters.Add("workspaceId", Reelables.Api.SDK.Client.ClientUtils.ParameterToString(workspaceId)); // path parameter
        if (trackingRef != null)
        {
            localVarRequestOptions.QueryParameters.Add(Reelables.Api.SDK.Client.ClientUtils.ParameterToMultiMap("", "trackingRef", trackingRef));
        }
        if (requestId != null)
        {
            localVarRequestOptions.HeaderParameters.Add("request-id", Reelables.Api.SDK.Client.ClientUtils.ParameterToString(requestId)); // header parameter
        }
        localVarRequestOptions.Data = patchConsignmentInput;

        localVarRequestOptions.Operation = "WorkspaceConsignmentsApi.WorkspacesWorkspaceIdConsignmentsPatch";
        localVarRequestOptions.OperationIndex = operationIndex;

        // authentication (AuthEndpoint) required
        // oauth required
        if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
        {
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }
            else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                     !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                     !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                     this.Configuration.OAuthFlow != null)
            {
                localVarRequestOptions.OAuth = true;
            }
        }

        // make the HTTP request
        var localVarResponse = this.Client.Patch<Consignment>("/workspaces/{workspaceId}/consignments", localVarRequestOptions, this.Configuration);
        if (this.ExceptionFactory != null)
        {
            Exception _exception = this.ExceptionFactory("WorkspacesWorkspaceIdConsignmentsPatch", localVarResponse);
            if (_exception != null)
            {
                throw _exception;
            }
        }

        return localVarResponse;
    }

    /// <summary>
    /// Update a Consignment using a Tracking Reference 
    /// </summary>
    /// <exception cref="Reelables.Api.SDK.Client.ApiException">Thrown when fails to make API call</exception>
    /// <param name="workspaceId">The identifier of the Workspace</param>
    /// <param name="patchConsignmentInput"></param>
    /// <param name="requestId">Unique identifier for the API request. Example: f7ecf495-ca1c-4468-a6c2-6ee3f723fa00 (optional)</param>
    /// <param name="trackingRef">The tracking reference that identifies the Consignment in the user system (optional)</param>
    /// <param name="operationIndex">Index associated with the operation.</param>
    /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
    /// <returns>Task of Consignment</returns>
    public async System.Threading.Tasks.Task<Consignment> WorkspacesWorkspaceIdConsignmentsPatchAsync(string workspaceId, PatchConsignmentInput patchConsignmentInput, string? requestId = default(string?), string? trackingRef = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
    {
        Reelables.Api.SDK.Client.ApiResponse<Consignment> localVarResponse = await WorkspacesWorkspaceIdConsignmentsPatchWithHttpInfoAsync(workspaceId, patchConsignmentInput, requestId, trackingRef, operationIndex, cancellationToken).ConfigureAwait(false);
        return localVarResponse.Data;
    }

    /// <summary>
    /// Update a Consignment using a Tracking Reference 
    /// </summary>
    /// <exception cref="Reelables.Api.SDK.Client.ApiException">Thrown when fails to make API call</exception>
    /// <param name="workspaceId">The identifier of the Workspace</param>
    /// <param name="patchConsignmentInput"></param>
    /// <param name="requestId">Unique identifier for the API request. Example: f7ecf495-ca1c-4468-a6c2-6ee3f723fa00 (optional)</param>
    /// <param name="trackingRef">The tracking reference that identifies the Consignment in the user system (optional)</param>
    /// <param name="operationIndex">Index associated with the operation.</param>
    /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
    /// <returns>Task of ApiResponse (Consignment)</returns>
    public async System.Threading.Tasks.Task<Reelables.Api.SDK.Client.ApiResponse<Consignment>> WorkspacesWorkspaceIdConsignmentsPatchWithHttpInfoAsync(string workspaceId, PatchConsignmentInput patchConsignmentInput, string? requestId = default(string?), string? trackingRef = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
    {
        // verify the required parameter 'workspaceId' is set
        if (workspaceId == null)
        {
            throw new Reelables.Api.SDK.Client.ApiException(400, "Missing required parameter 'workspaceId' when calling WorkspaceConsignmentsApi->WorkspacesWorkspaceIdConsignmentsPatch");
        }

        // verify the required parameter 'patchConsignmentInput' is set
        if (patchConsignmentInput == null)
        {
            throw new Reelables.Api.SDK.Client.ApiException(400, "Missing required parameter 'patchConsignmentInput' when calling WorkspaceConsignmentsApi->WorkspacesWorkspaceIdConsignmentsPatch");
        }


        Reelables.Api.SDK.Client.RequestOptions localVarRequestOptions = new Reelables.Api.SDK.Client.RequestOptions();

        string[] _contentTypes = new string[] {
            "application/json"
        };

        // to determine the Accept header
        string[] _accepts = new string[] {
            "application/json"
        };

        var localVarContentType = Reelables.Api.SDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
        if (localVarContentType != null)
        {
            localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
        }

        var localVarAccept = Reelables.Api.SDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
        if (localVarAccept != null)
        {
            localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
        }

        localVarRequestOptions.PathParameters.Add("workspaceId", Reelables.Api.SDK.Client.ClientUtils.ParameterToString(workspaceId)); // path parameter
        if (trackingRef != null)
        {
            localVarRequestOptions.QueryParameters.Add(Reelables.Api.SDK.Client.ClientUtils.ParameterToMultiMap("", "trackingRef", trackingRef));
        }
        if (requestId != null)
        {
            localVarRequestOptions.HeaderParameters.Add("request-id", Reelables.Api.SDK.Client.ClientUtils.ParameterToString(requestId)); // header parameter
        }
        localVarRequestOptions.Data = patchConsignmentInput;

        localVarRequestOptions.Operation = "WorkspaceConsignmentsApi.WorkspacesWorkspaceIdConsignmentsPatch";
        localVarRequestOptions.OperationIndex = operationIndex;

        // authentication (AuthEndpoint) required
        // oauth required
        if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
        {
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }
            else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                     !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                     !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                     this.Configuration.OAuthFlow != null)
            {
                localVarRequestOptions.OAuth = true;
            }
        }

        // make the HTTP request
        var localVarResponse = await this.AsynchronousClient.PatchAsync<Consignment>("/workspaces/{workspaceId}/consignments", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

        if (this.ExceptionFactory != null)
        {
            Exception _exception = this.ExceptionFactory("WorkspacesWorkspaceIdConsignmentsPatch", localVarResponse);
            if (_exception != null)
            {
                throw _exception;
            }
        }

        return localVarResponse;
    }

    /// <summary>
    /// Create new Consignment in Workspace 
    /// </summary>
    /// <exception cref="Reelables.Api.SDK.Client.ApiException">Thrown when fails to make API call</exception>
    /// <param name="workspaceId">The identifier of the Workspace</param>
    /// <param name="workspaceConsignmentsInput"></param>
    /// <param name="requestId">Unique identifier for the API request. Example: f7ecf495-ca1c-4468-a6c2-6ee3f723fa00 (optional)</param>
    /// <param name="operationIndex">Index associated with the operation.</param>
    /// <returns>WorkspaceConsignments</returns>
    public WorkspaceConsignments WorkspacesWorkspaceIdConsignmentsPost(string workspaceId, WorkspaceConsignmentsInput workspaceConsignmentsInput, string? requestId = default(string?), int operationIndex = 0)
    {
        Reelables.Api.SDK.Client.ApiResponse<WorkspaceConsignments> localVarResponse = WorkspacesWorkspaceIdConsignmentsPostWithHttpInfo(workspaceId, workspaceConsignmentsInput, requestId);
        return localVarResponse.Data;
    }

    /// <summary>
    /// Create new Consignment in Workspace 
    /// </summary>
    /// <exception cref="Reelables.Api.SDK.Client.ApiException">Thrown when fails to make API call</exception>
    /// <param name="workspaceId">The identifier of the Workspace</param>
    /// <param name="workspaceConsignmentsInput"></param>
    /// <param name="requestId">Unique identifier for the API request. Example: f7ecf495-ca1c-4468-a6c2-6ee3f723fa00 (optional)</param>
    /// <param name="operationIndex">Index associated with the operation.</param>
    /// <returns>ApiResponse of WorkspaceConsignments</returns>
    public Reelables.Api.SDK.Client.ApiResponse<WorkspaceConsignments> WorkspacesWorkspaceIdConsignmentsPostWithHttpInfo(string workspaceId, WorkspaceConsignmentsInput workspaceConsignmentsInput, string? requestId = default(string?), int operationIndex = 0)
    {
        // verify the required parameter 'workspaceId' is set
        if (workspaceId == null)
        {
            throw new Reelables.Api.SDK.Client.ApiException(400, "Missing required parameter 'workspaceId' when calling WorkspaceConsignmentsApi->WorkspacesWorkspaceIdConsignmentsPost");
        }

        // verify the required parameter 'workspaceConsignmentsInput' is set
        if (workspaceConsignmentsInput == null)
        {
            throw new Reelables.Api.SDK.Client.ApiException(400, "Missing required parameter 'workspaceConsignmentsInput' when calling WorkspaceConsignmentsApi->WorkspacesWorkspaceIdConsignmentsPost");
        }

        Reelables.Api.SDK.Client.RequestOptions localVarRequestOptions = new Reelables.Api.SDK.Client.RequestOptions();

        string[] _contentTypes = new string[] {
            "application/json"
        };

        // to determine the Accept header
        string[] _accepts = new string[] {
            "application/json"
        };

        var localVarContentType = Reelables.Api.SDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
        if (localVarContentType != null)
        {
            localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
        }

        var localVarAccept = Reelables.Api.SDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
        if (localVarAccept != null)
        {
            localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
        }

        localVarRequestOptions.PathParameters.Add("workspaceId", Reelables.Api.SDK.Client.ClientUtils.ParameterToString(workspaceId)); // path parameter
        if (requestId != null)
        {
            localVarRequestOptions.HeaderParameters.Add("request-id", Reelables.Api.SDK.Client.ClientUtils.ParameterToString(requestId)); // header parameter
        }
        localVarRequestOptions.Data = workspaceConsignmentsInput;

        localVarRequestOptions.Operation = "WorkspaceConsignmentsApi.WorkspacesWorkspaceIdConsignmentsPost";
        localVarRequestOptions.OperationIndex = operationIndex;

        // authentication (AuthEndpoint) required
        // oauth required
        if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
        {
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }
            else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                     !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                     !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                     this.Configuration.OAuthFlow != null)
            {
                localVarRequestOptions.OAuth = true;
            }
        }

        // make the HTTP request
        var localVarResponse = this.Client.Post<WorkspaceConsignments>("/workspaces/{workspaceId}/consignments", localVarRequestOptions, this.Configuration);
        if (this.ExceptionFactory != null)
        {
            Exception _exception = this.ExceptionFactory("WorkspacesWorkspaceIdConsignmentsPost", localVarResponse);
            if (_exception != null)
            {
                throw _exception;
            }
        }

        return localVarResponse;
    }

    /// <summary>
    /// Create new Consignment in Workspace 
    /// </summary>
    /// <exception cref="Reelables.Api.SDK.Client.ApiException">Thrown when fails to make API call</exception>
    /// <param name="workspaceId">The identifier of the Workspace</param>
    /// <param name="workspaceConsignmentsInput"></param>
    /// <param name="requestId">Unique identifier for the API request. Example: f7ecf495-ca1c-4468-a6c2-6ee3f723fa00 (optional)</param>
    /// <param name="operationIndex">Index associated with the operation.</param>
    /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
    /// <returns>Task of WorkspaceConsignments</returns>
    public async System.Threading.Tasks.Task<WorkspaceConsignments> WorkspacesWorkspaceIdConsignmentsPostAsync(string workspaceId, WorkspaceConsignmentsInput workspaceConsignmentsInput, string? requestId = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
    {
        Reelables.Api.SDK.Client.ApiResponse<WorkspaceConsignments> localVarResponse = await WorkspacesWorkspaceIdConsignmentsPostWithHttpInfoAsync(workspaceId, workspaceConsignmentsInput, requestId, operationIndex, cancellationToken).ConfigureAwait(false);
        return localVarResponse.Data;
    }

    /// <summary>
    /// Create new Consignment in Workspace 
    /// </summary>
    /// <exception cref="Reelables.Api.SDK.Client.ApiException">Thrown when fails to make API call</exception>
    /// <param name="workspaceId">The identifier of the Workspace</param>
    /// <param name="workspaceConsignmentsInput"></param>
    /// <param name="requestId">Unique identifier for the API request. Example: f7ecf495-ca1c-4468-a6c2-6ee3f723fa00 (optional)</param>
    /// <param name="operationIndex">Index associated with the operation.</param>
    /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
    /// <returns>Task of ApiResponse (WorkspaceConsignments)</returns>
    public async System.Threading.Tasks.Task<Reelables.Api.SDK.Client.ApiResponse<WorkspaceConsignments>> WorkspacesWorkspaceIdConsignmentsPostWithHttpInfoAsync(string workspaceId, WorkspaceConsignmentsInput workspaceConsignmentsInput, string? requestId = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
    {
        // verify the required parameter 'workspaceId' is set
        if (workspaceId == null)
        {
            throw new Reelables.Api.SDK.Client.ApiException(400, "Missing required parameter 'workspaceId' when calling WorkspaceConsignmentsApi->WorkspacesWorkspaceIdConsignmentsPost");
        }

        // verify the required parameter 'workspaceConsignmentsInput' is set
        if (workspaceConsignmentsInput == null)
        {
            throw new Reelables.Api.SDK.Client.ApiException(400, "Missing required parameter 'workspaceConsignmentsInput' when calling WorkspaceConsignmentsApi->WorkspacesWorkspaceIdConsignmentsPost");
        }


        Reelables.Api.SDK.Client.RequestOptions localVarRequestOptions = new Reelables.Api.SDK.Client.RequestOptions();

        string[] _contentTypes = new string[] {
            "application/json"
        };

        // to determine the Accept header
        string[] _accepts = new string[] {
            "application/json"
        };

        var localVarContentType = Reelables.Api.SDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
        if (localVarContentType != null)
        {
            localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
        }

        var localVarAccept = Reelables.Api.SDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
        if (localVarAccept != null)
        {
            localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
        }

        localVarRequestOptions.PathParameters.Add("workspaceId", Reelables.Api.SDK.Client.ClientUtils.ParameterToString(workspaceId)); // path parameter
        if (requestId != null)
        {
            localVarRequestOptions.HeaderParameters.Add("request-id", Reelables.Api.SDK.Client.ClientUtils.ParameterToString(requestId)); // header parameter
        }
        localVarRequestOptions.Data = workspaceConsignmentsInput;

        localVarRequestOptions.Operation = "WorkspaceConsignmentsApi.WorkspacesWorkspaceIdConsignmentsPost";
        localVarRequestOptions.OperationIndex = operationIndex;

        // authentication (AuthEndpoint) required
        // oauth required
        if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
        {
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }
            else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                     !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                     !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                     this.Configuration.OAuthFlow != null)
            {
                localVarRequestOptions.OAuth = true;
            }
        }

        // make the HTTP request
        var localVarResponse = await this.AsynchronousClient.PostAsync<WorkspaceConsignments>("/workspaces/{workspaceId}/consignments", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

        if (this.ExceptionFactory != null)
        {
            Exception _exception = this.ExceptionFactory("WorkspacesWorkspaceIdConsignmentsPost", localVarResponse);
            if (_exception != null)
            {
                throw _exception;
            }
        }

        return localVarResponse;
    }

}