/*
 * Reelables API
 *
 * RESTful API for communicating with the Reelables Platform.
 *
 * The version of the OpenAPI document: 1.2.7
 * Contact: team@reelables.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// WorkspacePrintTemplate
    /// </summary>
    [DataContract(Name = "WorkspacePrintTemplate")]
    public partial class WorkspacePrintTemplate : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WorkspacePrintTemplate" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected WorkspacePrintTemplate() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="WorkspacePrintTemplate" /> class.
        /// </summary>
        /// <param name="requiredParams">requiredParams.</param>
        /// <param name="templateId">The indentifier of the Print Template (required).</param>
        /// <param name="workspaceId">Unique identifier of the Workspace that the Print Template belongs to. Example: &#39;d290f1ee-6c54-4b01-90e6-d701748f0851&#39; (required).</param>
        public WorkspacePrintTemplate(List<string> requiredParams = default(List<string>), string templateId = default(string), Guid workspaceId = default(Guid))
        {
            // to ensure "templateId" is required (not null)
            if (templateId == null)
            {
                throw new ArgumentNullException("templateId is a required property for WorkspacePrintTemplate and cannot be null");
            }
            this.TemplateId = templateId;
            this.WorkspaceId = workspaceId;
            this.RequiredParams = requiredParams;
        }

        /// <summary>
        /// Gets or Sets RequiredParams
        /// </summary>
        [DataMember(Name = "requiredParams", EmitDefaultValue = false)]
        public List<string> RequiredParams { get; set; }

        /// <summary>
        /// The indentifier of the Print Template
        /// </summary>
        /// <value>The indentifier of the Print Template</value>
        [DataMember(Name = "templateId", IsRequired = true, EmitDefaultValue = true)]
        public string TemplateId { get; set; }

        /// <summary>
        /// Unique identifier of the Workspace that the Print Template belongs to. Example: &#39;d290f1ee-6c54-4b01-90e6-d701748f0851&#39;
        /// </summary>
        /// <value>Unique identifier of the Workspace that the Print Template belongs to. Example: &#39;d290f1ee-6c54-4b01-90e6-d701748f0851&#39;</value>
        [DataMember(Name = "workspaceId", IsRequired = true, EmitDefaultValue = true)]
        public Guid WorkspaceId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WorkspacePrintTemplate {\n");
            sb.Append("  RequiredParams: ").Append(RequiredParams).Append("\n");
            sb.Append("  TemplateId: ").Append(TemplateId).Append("\n");
            sb.Append("  WorkspaceId: ").Append(WorkspaceId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // TemplateId (string) maxLength
            if (this.TemplateId != null && this.TemplateId.Length > 12)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for TemplateId, length must be less than 12.", new [] { "TemplateId" });
            }

            if (this.TemplateId != null) {
                // TemplateId (string) pattern
                Regex regexTemplateId = new Regex(@"^template[0-9]*$", RegexOptions.CultureInvariant);
                if (!regexTemplateId.Match(this.TemplateId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for TemplateId, must match a pattern of " + regexTemplateId, new [] { "TemplateId" });
                }
            }

            // WorkspaceId (Guid) maxLength
            if (this.WorkspaceId != null && this.WorkspaceId.Length > 36)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for WorkspaceId, length must be less than 36.", new [] { "WorkspaceId" });
            }

            if (this.WorkspaceId != null) {
                // WorkspaceId (Guid) pattern
                Regex regexWorkspaceId = new Regex(@"^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", RegexOptions.CultureInvariant);
                if (!regexWorkspaceId.Match(this.WorkspaceId.ToString()).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for WorkspaceId, must match a pattern of " + regexWorkspaceId, new [] { "WorkspaceId" });
                }
            }

            yield break;
        }
    }

}
