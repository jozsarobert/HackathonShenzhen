/*
 * Reelables API
 *
 * RESTful API for communicating with the Reelables Platform.
 *
 * The version of the OpenAPI document: 1.2.7
 * Contact: team@reelables.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// WorkspaceSpacesInputSpacesInner
    /// </summary>
    [DataContract(Name = "WorkspaceSpacesInput_spaces_inner")]
    public partial class WorkspaceSpacesInputSpacesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WorkspaceSpacesInputSpacesInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected WorkspaceSpacesInputSpacesInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="WorkspaceSpacesInputSpacesInner" /> class.
        /// </summary>
        /// <param name="name">The name of the Space (required).</param>
        /// <param name="gatewayId">Gateway identifier, used when creating a Space and linking a Gateway at the same time. Example: &#39;e00fd5315222e588e1f1482b&#39;.</param>
        public WorkspaceSpacesInputSpacesInner(string name = default(string), string gatewayId = default(string))
        {
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for WorkspaceSpacesInputSpacesInner and cannot be null");
            }
            this.Name = name;
            this.GatewayId = gatewayId;
        }

        /// <summary>
        /// The name of the Space
        /// </summary>
        /// <value>The name of the Space</value>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gateway identifier, used when creating a Space and linking a Gateway at the same time. Example: &#39;e00fd5315222e588e1f1482b&#39;
        /// </summary>
        /// <value>Gateway identifier, used when creating a Space and linking a Gateway at the same time. Example: &#39;e00fd5315222e588e1f1482b&#39;</value>
        [DataMember(Name = "gatewayId", EmitDefaultValue = false)]
        public string GatewayId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WorkspaceSpacesInputSpacesInner {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  GatewayId: ").Append(GatewayId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Name (string) maxLength
            if (this.Name != null && this.Name.Length > 500)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Name, length must be less than 500.", new [] { "Name" });
            }

            if (this.Name != null) {
                // Name (string) pattern
                Regex regexName = new Regex(@"^[a-zA-Z0-9!@#$&()\-`.+,/"" ]*$", RegexOptions.CultureInvariant);
                if (!regexName.Match(this.Name).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Name, must match a pattern of " + regexName, new [] { "Name" });
                }
            }

            // GatewayId (string) maxLength
            if (this.GatewayId != null && this.GatewayId.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for GatewayId, length must be less than 50.", new [] { "GatewayId" });
            }

            if (this.GatewayId != null) {
                // GatewayId (string) pattern
                Regex regexGatewayId = new Regex(@"^[-_A-Za-z0-9]*$", RegexOptions.CultureInvariant);
                if (!regexGatewayId.Match(this.GatewayId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for GatewayId, must match a pattern of " + regexGatewayId, new [] { "GatewayId" });
                }
            }

            yield break;
        }
    }

}
