/*
 * ONE Record API Documentation
 *
 * This OpenAPI specification describes the API endpoint structure of an ONE Record API implementation.<br/><br/><b>Note:</b><br/>The included schemas can only be used to generate JSON-LD in the extended document form.<br/>However, to be fully ONE Record compliant, any ONE Record API (and any compliant ONE Record client)<br/><b>MUST</b> support at least the expanded, compacted, and flattened document forms.<br/><br/>More information about the ONE Record specification are available on [IATA Github repository](https://github.com/IATA-Cargo/ONE-Record) and on the [ONE Record Developer Portal](https://onerecord.iata.org).
 *
 * The version of the OpenAPI document: 2.0.0-dev
 * Contact: onerecord@iata.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.IO;
using System.Net;

namespace OneRecord.Api.SDK.Client;

/// <summary>
/// A container for generalized request inputs. This type allows consumers to extend the request functionality
/// by abstracting away from the default (built-in) request framework (e.g. RestSharp).
/// </summary>
public class RequestOptions
{
    /// <summary>
    /// Parameters to be bound to path parts of the Request's URL
    /// </summary>
    public Dictionary<string, string> HttpsPathParameters { get; set; }

    /// <summary>
    /// Query parameters to be applied to the request.
    /// Keys may have 1 or more values associated.
    /// </summary>
    public Multimap<string, string> HttpsQueryParameters { get; set; }

    /// <summary>
    /// Header parameters to be applied to the request.
    /// Keys may have 1 or more values associated.
    /// </summary>
    public Multimap<string, string> HttpsHeaderParameters { get; set; }

    /// <summary>
    /// Form parameters to be sent along with the request.
    /// </summary>
    public Dictionary<string, string> HttpsFormParameters { get; set; }

    /// <summary>
    /// File parameters to be sent along with the request.
    /// </summary>
    public Multimap<string, Stream> HttpsFileParameters { get; set; }

    /// <summary>
    /// Cookies to be sent along with the request.
    /// </summary>
    public List<Cookie> HttpsCookies { get; set; }

    /// <summary>
    /// Operation associated with the request path.
    /// </summary>
    public string HttpsOperation { get; set; }

    /// <summary>
    /// Index associated with the operation.
    /// </summary>
    public int HttpsOperationIndex { get; set; }

    /// <summary>
    /// Any data associated with a request body.
    /// </summary>
    public Object HttpsData { get; set; }

    /// <summary>
    /// Constructs a new instance of <see cref="RequestOptions"/>
    /// </summary>
    public RequestOptions()
    {
        HttpsPathParameters = new Dictionary<string, string>();
        HttpsQueryParameters = new Multimap<string, string>();
        HttpsHeaderParameters = new Multimap<string, string>();
        HttpsFormParameters = new Dictionary<string, string>();
        HttpsFileParameters = new Multimap<string, Stream>();
        HttpsCookies = new List<Cookie>();
    }
}
