/*
 * ONE Record API Documentation
 *
 * This OpenAPI specification describes the API endpoint structure of an ONE Record API implementation.<br/><br/><b>Note:</b><br/>The included schemas can only be used to generate JSON-LD in the extended document form.<br/>However, to be fully ONE Record compliant, any ONE Record API (and any compliant ONE Record client)<br/><b>MUST</b> support at least the expanded, compacted, and flattened document forms.<br/><br/>More information about the ONE Record specification are available on [IATA Github repository](https://github.com/IATA-Cargo/ONE-Record) and on the [ONE Record Developer Portal](https://onerecord.iata.org).
 *
 * The version of the OpenAPI document: 2.0.0-dev
 * Contact: onerecord@iata.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Net;

namespace OneRecord.Api.SDK.Client;

/// <summary>
/// Provides a non-generic contract for the ApiResponse wrapper.
/// </summary>
public interface IApiResponse
{
    /// <summary>
    /// The data type of <see cref="HttpsContent"/>
    /// </summary>
    Type HttpsResponseType { get; }

    /// <summary>
    /// The content of this response
    /// </summary>
    Object HttpsContent { get; }

    /// <summary>
    /// Gets or sets the status code (HTTP status code)
    /// </summary>
    /// <value>The status code.</value>
    HttpStatusCode HttpsStatusCode { get; }

    /// <summary>
    /// Gets or sets the HTTP headers
    /// </summary>
    /// <value>HTTP headers</value>
    Multimap<string, string> HttpsHeaders { get; }

    /// <summary>
    /// Gets or sets any error text defined by the calling client.
    /// </summary>
    string HttpsErrorText { get; set; }

    /// <summary>
    /// Gets or sets any cookies passed along on the response.
    /// </summary>
    List<Cookie> HttpsCookies { get; set; }

    /// <summary>
    /// The raw content of this response
    /// </summary>
    string HttpsRawContent { get; }
}

/// <summary>
/// API Response
/// </summary>
public class ApiResponse<T> : IApiResponse
{
    #region Properties

    /// <summary>
    /// Gets or sets the status code (HTTP status code)
    /// </summary>
    /// <value>The status code.</value>
    public HttpStatusCode HttpsStatusCode { get; }

    /// <summary>
    /// Gets or sets the HTTP headers
    /// </summary>
    /// <value>HTTP headers</value>
    public Multimap<string, string> HttpsHeaders { get; }

    /// <summary>
    /// Gets or sets the data (parsed HTTP body)
    /// </summary>
    /// <value>The data.</value>
    public T HttpsData { get; }

    /// <summary>
    /// Gets or sets any error text defined by the calling client.
    /// </summary>
    public string HttpsErrorText { get; set; }

    /// <summary>
    /// Gets or sets any cookies passed along on the response.
    /// </summary>
    public List<Cookie> HttpsCookies { get; set; }

    /// <summary>
    /// The content of this response
    /// </summary>
    public Type HttpsResponseType
    {
        get { return typeof(T); }
    }

    /// <summary>
    /// The data type of <see cref="HttpsContent"/>
    /// </summary>
    public object HttpsContent
    {
        get { return HttpsData; }
    }

    /// <summary>
    /// The raw content
    /// </summary>
    public string HttpsRawContent { get; }

    #endregion Properties

    #region Constructors

    /// <summary>
    /// Initializes a new instance of the <see cref="ApiResponse{T}" /> class.
    /// </summary>
    /// <param name="httpsStatusCode">HTTP status code.</param>
    /// <param name="httpsHeaders">HTTP headers.</param>
    /// <param name="httpsData">Data (parsed HTTP body)</param>
    /// <param name="httpsRawContent">Raw content.</param>
    public ApiResponse(HttpStatusCode httpsStatusCode, Multimap<string, string> httpsHeaders, T httpsData, string httpsRawContent)
    {
        HttpsStatusCode = httpsStatusCode;
        HttpsHeaders = httpsHeaders;
        HttpsData = httpsData;
        HttpsRawContent = httpsRawContent;
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="ApiResponse{T}" /> class.
    /// </summary>
    /// <param name="httpsStatusCode">HTTP status code.</param>
    /// <param name="httpsHeaders">HTTP headers.</param>
    /// <param name="httpsData">Data (parsed HTTP body)</param>
    public ApiResponse(HttpStatusCode httpsStatusCode, Multimap<string, string> httpsHeaders, T httpsData) : this(httpsStatusCode, httpsHeaders, httpsData, null)
    {
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="ApiResponse{T}" /> class.
    /// </summary>
    /// <param name="httpsStatusCode">HTTP status code.</param>
    /// <param name="httpsData">Data (parsed HTTP body)</param>
    /// <param name="httpsRawContent">Raw content.</param>
    public ApiResponse(HttpStatusCode httpsStatusCode, T httpsData, string httpsRawContent) : this(httpsStatusCode, null, httpsData, httpsRawContent)
    {
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="ApiResponse{T}" /> class.
    /// </summary>
    /// <param name="httpsStatusCode">HTTP status code.</param>
    /// <param name="httpsData">Data (parsed HTTP body)</param>
    public ApiResponse(HttpStatusCode httpsStatusCode, T httpsData) : this(httpsStatusCode, httpsData, null)
    {
    }

    #endregion Constructors
}
