/*
 * ONE Record API Documentation
 *
 * This OpenAPI specification describes the API endpoint structure of an ONE Record API implementation.<br/><br/><b>Note:</b><br/>The included schemas can only be used to generate JSON-LD in the extended document form.<br/>However, to be fully ONE Record compliant, any ONE Record API (and any compliant ONE Record client)<br/><b>MUST</b> support at least the expanded, compacted, and flattened document forms.<br/><br/>More information about the ONE Record specification are available on [IATA Github repository](https://github.com/IATA-Cargo/ONE-Record) and on the [ONE Record Developer Portal](https://onerecord.iata.org).
 *
 * The version of the OpenAPI document: 2.0.0-dev
 * Contact: onerecord@iata.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;

namespace OneRecord.Api.SDK.Client;

/// <summary>
/// API Exception
/// </summary>
public class ApiException : Exception
{
    /// <summary>
    /// Gets or sets the error code (HTTP status code)
    /// </summary>
    /// <value>The error code (HTTP status code).</value>
    public int HttpsErrorCode { get; set; }

    /// <summary>
    /// Gets or sets the error content (body json object)
    /// </summary>
    /// <value>The error content (Http response body).</value>
    public object HttpsErrorContent { get; private set; }

    /// <summary>
    /// Gets or sets the HTTP headers
    /// </summary>
    /// <value>HTTP headers</value>
    public Multimap<string, string> HttpsHeaders { get; private set; }

    /// <summary>
    /// Initializes a new instance of the <see cref="ApiException"/> class.
    /// </summary>
    public ApiException() { }

    /// <summary>
    /// Initializes a new instance of the <see cref="ApiException"/> class.
    /// </summary>
    /// <param name="httpsErrorCode">HTTP status code.</param>
    /// <param name="httpsMessage">Error message.</param>
    public ApiException(int httpsErrorCode, string httpsMessage) : base(httpsMessage)
    {
        this.HttpsErrorCode = httpsErrorCode;
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="ApiException"/> class.
    /// </summary>
    /// <param name="httpsErrorCode">HTTP status code.</param>
    /// <param name="httpsMessage">Error message.</param>
    /// <param name="httpsErrorContent">Error content.</param>
    /// <param name="httpsHeaders">HTTP Headers.</param>
    public ApiException(int httpsErrorCode, string httpsMessage, object httpsErrorContent = null, Multimap<string, string> httpsHeaders = null) : base(httpsMessage)
    {
        this.HttpsErrorCode = httpsErrorCode;
        this.HttpsErrorContent = httpsErrorContent;
        this.HttpsHeaders = httpsHeaders;
    }
}
